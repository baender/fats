% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotFilterResponse.R
\name{plotFilterResponse}
\alias{plotFilterResponse}
\title{Function plotting the filter frequency response.}
\usage{
plotFilterResponse(filterList, timeStep = 1, resolution = 512,
  xAxis = "period", xAxisLimits = c(0, 1), returnPlottingData = FALSE)
}
\arguments{
\item{filterList}{List of filters of class Ma or Arma; FIR or IIR filters as derived from package signal}

\item{timeStep}{Numeric value (default: 1); time between two samples.}

\item{resolution}{Numeric value (default: 512); defining frequency resolution of filter response.}

\item{xAxis}{Character string (default: "period"); Either "frequency"
or "period". Defining if on the x-axis the linear frequency or the reciprocal
oscillation period is displayed.}

\item{xAxisLimits}{Numeric vector of length 2 (default: c(0, 1));
Defines the range of the spectrum being displayed. 0 -> 0Hz/Inf Period, 1 -> Nyquist Frequency/Nyquist Period (twice the time step).
The range is the same as for band edges during filter design in package signal (i.e. fir1())}

\item{returnPlottingData}{Logical value; Should plot data be returned as data frame.}
}
\value{
Plots the filter response of all filters in argument filterList.
Returns a data frame in long format with all plotting information.
}
\description{
The function calculates and plots the frequency response of the given list of filters.
}
\details{
This function takes a list of filters either developed via the signal package (i.e. fir1() or butter()),
or custom developed filters such as moving average, which need to have the class Ma added manually.
Several arguments allow customizing the plot generated by the function.
The main purpose is to provide the right scaling on the x-Axis which is often a problem for beginners.
Also, the filter response of Arma models can be calculated and plotted.
}
\examples{

### plot FIR filters with various cutoff frequencies
cutoffFrequencies <- seq(0.1, 0.9, 0.1)
lowPassFIR <- lapply(cutoffFrequencies, function(x) signal::fir1(n = 10, w = x, type = "low"))
names(lowPassFIR) <- paste0("Cutoff frequency=", cutoffFrequencies)
plotFilterResponse(lowPassFIR)

### plot filter repsonse of moving average with various window lengths
windowLength <- seq(2, 5)
movingAverage <- lapply(windowLength, function(x) {averageFilter <- rep(1/x, x); class(averageFilter) <- "Ma"; averageFilter})
names(movingAverage) <- c(paste0("Moving Average n=", windowLength))
plotFilterResponse(movingAverage)

### comparing moving average with FIR filter
movingAverage <- rep(1/10, 10)
class(movingAverage) <- "Ma"
filterList <- list(fir1(n = 15, w = 0.01, type = "low"), movingAverage)
names(filterList) <- c("FIR_n=15_w=0.01", "MA_n=10")
plotFilterResponse(filterList)


timeVector <- seq(0, 200, 1)
syntheticSignal <- 5*cos(2*pi/50*timeVector) + 3*cos(2*pi/4*timeVector) + 2*cos(2*pi/2.1*timeVector)
plot(syntheticSignal, type = "l")
lines(filter(syntheticSignal, filter = rep(1/4, 4)), col = "red")
lines(filter(syntheticSignal, filter = rep(1/5, 5)), col = "blue")
}
\author{
Daniel Beiter, \email{daniel.beiter@gfz-potsdam.de}
}
\keyword{filter}
\keyword{response}
